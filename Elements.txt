abstract pr
boolean dato
break pr
byte dato
case pr
catch pr
char dato
class pr
const pr
cast pr
op pr
continue pr
default pr
do pr
double dato
else pr
extends pr
false pr
final pr
finally pr
float dato
for pr
if pr
implements pr
import pr
int dato
interface pr
long dato
native pr
new pr
null pr
package pr
private modificador
protected modificador
public modificador
return pr
short dato
static pr
super pr
switch pr
synchronized pr
String dato
this pr
throw pr
throws pr
transient modificador
true pr
try pr
void dato
while pr
. accesor
[ cor_a
] cor_c
( par_a
) par_c
{ lla_a
} lla_c
+ op_add
- op_less
* op_mult
! sy_not
/ op_div
% op_mod
< sy_may
> sy_men
= sy_asig
& sy_y
| sy_o
\ sy_divin
: sy
, sy_coma
; terminal
" sy_codo
' sy_cosi